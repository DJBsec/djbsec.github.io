<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://djbsec.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://djbsec.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-02-15T06:28:52+00:00</updated><id>https://djbsec.github.io/feed.xml</id><title type="html">DJBSec, CISSP</title><subtitle>DJBSec is an IT veteran with over 25 years of experience in IT and Cyber Security </subtitle><entry><title type="html">CyberNews 2-14-25</title><link href="https://djbsec.github.io/blog/2025/cybernews/" rel="alternate" type="text/html" title="CyberNews 2-14-25"/><published>2025-02-14T06:59:00+00:00</published><updated>2025-02-14T06:59:00+00:00</updated><id>https://djbsec.github.io/blog/2025/cybernews</id><content type="html" xml:base="https://djbsec.github.io/blog/2025/cybernews/"><![CDATA[<h1 id="cybersecurity-stories-for-feb-14-2025">Cybersecurity Stories for Feb 14, 2025</h1> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="/assets/audio/news/CyberSecurityStories-02-14-2025.mp3" controls=""/> </figure> </div> </div> <div class="caption"> Todays stories in audio form </div> <h1 id="cybersecurity-news-summary">Cybersecurity News Summary</h1> <h2 id="story-1-lazarus-group-targets-developers-with-infostealer-malware">Story 1: Lazarus Group Targets Developers with Infostealer Malware</h2> <p>The North Korean-linked Lazarus Group has initiated a campaign targeting software developers using infostealer malware. They employ social engineering tactics, such as fake job interviews and compromised NPM packages, to trick developers into executing malicious scripts. The malware utilizes obfuscation techniques like Base64 encoding and zlib compression to conceal its code. Key components include a Python script that decodes and executes the malware, leading to the theft of sensitive information from developers’ systems.</p> <p><a href="https://cybersecuritynews.com/lazarus-group-infostealer-malwares-attacking-developers/">Read more</a></p> <h2 id="story-2-sonicwall-firewall-vulnerability-exploited-post-poc-release">Story 2: SonicWall Firewall Vulnerability Exploited Post PoC Release</h2> <p>Attackers are actively exploiting an authentication bypass vulnerability in SonicWall firewalls following the release of a proof-of-concept (PoC) exploit. This flaw affects the SSLVPN authentication mechanism in specific SonicOS versions, allowing remote attackers to hijack active SSL VPN sessions without authentication. SonicWall has urged users to promptly update their firmware to mitigate this threat.</p> <p><a href="https://www.bleepingcomputer.com/news/security/sonicwall-firewall-bug-leveraged-in-attacks-after-poc-exploit-release/">Read more</a></p> <h2 id="story-3-piratefi-game-on-steam-distributes-vidar-malware">Story 3: PirateFi Game on Steam Distributes Vidar Malware</h2> <p>A free-to-play game named PirateFi was found distributing the Vidar infostealing malware to unsuspecting users on the Steam platform. Available between February 6th and 12th, the game was downloaded by up to 1,500 users. Steam has notified potentially affected users, advising them to run full system scans and consider reinstalling Windows as a precaution.</p> <p><a href="https://www.bleepingcomputer.com/news/security/malicious-piratefi-game-infects-steam-users-with-vidar-malware/">Read more</a></p> <h2 id="story-4-new-phishing-kit-bypasses-two-factor-authentication">Story 4: New Phishing Kit Bypasses Two-Factor Authentication</h2> <p>A phishing kit named Astaroth has been identified targeting Gmail, Yahoo, and Microsoft accounts. It bypasses two-factor authentication (2FA) by acting as a man-in-the-middle, capturing tokens, credentials, and session cookies in real-time. This method renders traditional phishing defenses less effective, highlighting the need for enhanced security measures.</p> <p><a href="https://www.securitymagazine.com/articles/101384-gmail-yahoo-targeted-by-a-new-two-factor-authentication-phishing-kit">Read more</a></p> <h2 id="story-5-north-korean-it-workers-infiltrate-international-companies">Story 5: North Korean IT Workers Infiltrate International Companies</h2> <p>North Korean IT workers have been securing remote positions in international companies using false identities. This practice violates international sanctions and poses significant cybersecurity risks, including data theft and the installation of backdoors on compromised systems. The Insikt Group reports that these operatives use sophisticated malware and front companies to evade detection.</p> <p><a href="https://cybersecuritynews.com/north-korean-it-workers-infiltrate-international-companies/">Read more</a></p> <h2 id="story-6-postgresql-bug-exploited-in-us-treasury-attack">Story 6: PostgreSQL Bug Exploited in US Treasury Attack</h2> <p>A high-severity SQL injection vulnerability in the PostgreSQL interactive tool was exploited alongside a zero-day in BeyondTrust software to breach the US Treasury in December. Researchers from Rapid7 disclosed that the PostgreSQL flaw was crucial to the attack, emphasizing the need for timely patching and vigilance against complex exploit chains.</p> <p><a href="https://www.theregister.com/2025/02/14/postgresql_bug_treasury/">Read more</a></p>]]></content><author><name></name></author><category term="News"/><category term="CyberNews"/><summary type="html"><![CDATA[Feb 14, 2025]]></summary></entry><entry><title type="html">CyberNews</title><link href="https://djbsec.github.io/blog/2025/cybernews/" rel="alternate" type="text/html" title="CyberNews"/><published>2025-01-24T06:59:00+00:00</published><updated>2025-01-24T06:59:00+00:00</updated><id>https://djbsec.github.io/blog/2025/cybernews</id><content type="html" xml:base="https://djbsec.github.io/blog/2025/cybernews/"><![CDATA[<h1 id="cybersecurity-stories-for-january-24-2025">Cybersecurity Stories for January 24, 2025</h1> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="/assets/audio/news/CyberSecurityStories-01-24-2025.mp3" controls=""/> </figure> </div> </div> <div class="caption"> Todays stories in audio form </div> <h2 id="networking-security">Networking Security</h2> <h3 id="1-stealthy-magic-packet-malware-targets-juniper-vpn-gateways">1. Stealthy ‘Magic Packet’ Malware Targets Juniper VPN Gateways</h3> <p>Researchers have uncovered a sophisticated <strong>“magic packet” malware</strong> targeting <strong>Juniper VPN gateways</strong>, exploiting undocumented features to maintain persistent and covert access. The malware uses specially crafted packets to activate malicious capabilities, avoiding traditional detection methods. This advanced threat could allow attackers to compromise sensitive network communications. Organizations using Juniper VPNs are urged to monitor network traffic for anomalies and apply available patches.</p> <p><strong>Source:</strong> <a href="https://www.bleepingcomputer.com/news/security/stealthy-magic-packet-malware-targets-juniper-vpn-gateways/">BleepingComputer</a></p> <hr/> <h3 id="2-sonicwall-critical-bug">2. SonicWall Critical Bug</h3> <p>A critical vulnerability in <strong>SonicWall appliances</strong> impacts the <strong>SSL-VPN and web management interfaces</strong>, tracked as <strong>CVE-2025-23006</strong>. This flaw allows remote attackers to execute arbitrary code without authentication, making it a significant security concern. SonicWall has released a patch to address the issue, and administrators are strongly advised to update affected devices immediately to prevent exploitation.</p> <p><strong>Source:</strong> <a href="https://www.theregister.com/2025/01/23/sonicwall_critical_bug/">The Register</a></p> <hr/> <h3 id="3-qnap-fixes-six-rsync-vulnerabilities-in-hbs-nas-backup-app">3. QNAP Fixes Six rsync Vulnerabilities in HBS NAS Backup App</h3> <p>QNAP has resolved <strong>six critical vulnerabilities</strong> in the Hybrid Backup Sync (HBS) app used for NAS devices. The flaws include <strong>command injection, privilege escalation, and directory traversal vulnerabilities</strong>, potentially allowing attackers to compromise backups or access sensitive data. QNAP advises users to install the latest HBS updates to mitigate risks.</p> <p><strong>Source:</strong> <a href="https://www.bleepingcomputer.com/news/security/qnap-fixes-six-rsync-vulnerabilities-in-hbs-nas-backup-recovery-app/">BleepingComputer</a></p> <hr/> <h3 id="4-critical-palo-alto-firewall-vulnerabilities">4. Critical Palo Alto Firewall Vulnerabilities</h3> <p>Multiple vulnerabilities have been disclosed in <strong>Palo Alto Networks firewalls</strong>, including a critical <strong>remote code execution (RCE)</strong> flaw with a CVSS score of <strong>9.8</strong>. Attackers can exploit these issues to bypass authentication, execute arbitrary code, and gain control over systems. Organizations using Palo Alto firewalls should immediately apply patches to safeguard their networks.</p> <p><strong>Source:</strong> <a href="https://cybersecuritynews.com/critical-palo-alto-firewall-vulnerabilities/">Cybersecurity News</a></p> <hr/> <h2 id="phishing">Phishing</h2> <h3 id="1-tycoon-2fa-phishing-kit-using-specially-crafted-code">1. Tycoon 2FA Phishing Kit Using Specially Crafted Code</h3> <p>A new phishing kit called <strong>“Tycoon”</strong> is leveraging <strong>adversary-in-the-middle (AiTM) techniques</strong> to bypass two-factor authentication (2FA). By intercepting credentials and session tokens, this kit enables attackers to compromise accounts with enhanced security measures. Organizations are advised to adopt <strong>FIDO2-based MFA</strong> solutions and educate users about phishing risks.</p> <p><strong>Source:</strong> <a href="https://cybersecuritynews.com/tycoon-2fa-phishing-kit-using-specially-crafted-code/">Cybersecurity News</a></p> <hr/> <h3 id="2-fake-microsoft-teams-page-drops-malware-on-windows">2. Fake Microsoft Teams Page Drops Malware on Windows</h3> <p>Cybercriminals are using a <strong>fake Microsoft Teams login page</strong> to distribute malware on Windows systems. Victims are lured into downloading malicious files disguised as login tools, leading to credential theft and unauthorized access. Employees should verify URLs, avoid downloading suspicious files, and use official Microsoft apps for secure access.</p> <p><strong>Source:</strong> <a href="https://cybersecuritynews.com/fake-microsoft-teams-page-drops-malware-on-windows/">Cybersecurity News</a></p> <hr/> <h2 id="ransomwarecompromise">Ransomware/Compromise</h2> <h3 id="1-microsoft-outlook-zero-click-rce-vulnerability-cve-2025-21298">1. Microsoft Outlook Zero-Click RCE Vulnerability (CVE-2025-21298)</h3> <p>A critical <strong>zero-click remote code execution (RCE)</strong> vulnerability has been identified in <strong>Microsoft Outlook</strong>. Tracked as <strong>CVE-2025-21298</strong>, this flaw allows attackers to execute malicious code by simply sending a specially crafted RTF email. Victims don’t need to interact with the email for the attack to succeed. Microsoft has issued a patch as part of their January 2025 updates, and all users are urged to apply it immediately.</p> <p><strong>Source:</strong> <a href="https://cybersecuritynews.com/outlook-zero-click-rce-vulnerability-cve-2025-21298/">Cybersecurity News</a></p> <h3 id="2-fbi-north-korean-it-workers-steal-source-code-to-extort-employers">2. FBI: North Korean IT Workers Steal Source Code to Extort Employers</h3> <p>The FBI warns about <strong>North Korean IT workers</strong> infiltrating international companies under fake identities. These actors gain access to <strong>source code repositories</strong> and critical systems, later using this access to extort employers with threats of data exposure. Businesses are urged to implement thorough <strong>vetting processes</strong> and monitor for suspicious activities within their teams.</p> <p><strong>Source:</strong> <a href="https://www.bleepingcomputer.com/news/security/fbi-north-korean-it-workers-steal-source-code-to-extort-employers/">BleepingComputer</a></p> <hr/> <h3 id="3-ransomware-attacking-vmware-esxi-hosts">3. Ransomware Attacking VMware ESXi Hosts</h3> <p>A ransomware campaign is targeting <strong>VMware ESXi hosts</strong>, exploiting unpatched vulnerabilities to encrypt virtual machines. This approach can disrupt entire infrastructures, demanding ransoms for decryption keys. Administrators should ensure ESXi systems are fully patched and utilize <strong>immutable backups</strong> to mitigate potential damage.</p> <p><strong>Source:</strong> <a href="https://cybersecuritynews.com/ransomware-attacking-vmware-esxi-hosts/">Cybersecurity News</a></p> <hr/> <h3 id="4-488m-was-the-average-cost-of-a-data-breach-in-2024">4. $4.88M Was the Average Cost of a Data Breach in 2024</h3> <p>A 2024 report reveals the <strong>average cost of a data breach</strong> was an astounding <strong>$4.88 million</strong>, highlighting the growing financial and reputational risks of cyberattacks. The report emphasizes the importance of <strong>employee training, robust incident response plans, and advanced threat detection tools</strong> in reducing breach costs and impacts.</p> <p><strong>Source:</strong> <a href="https://www.securitymagazine.com/articles/101321-488m-was-the-average-cost-of-a-data-breach-in-2024">Security Magazine</a></p> <hr/>]]></content><author><name></name></author><category term="News"/><category term="CyberNews"/><summary type="html"><![CDATA[Jan 24, 2025]]></summary></entry><entry><title type="html">CyberNews</title><link href="https://djbsec.github.io/blog/2025/cybernews/" rel="alternate" type="text/html" title="CyberNews"/><published>2025-01-17T06:59:00+00:00</published><updated>2025-01-17T06:59:00+00:00</updated><id>https://djbsec.github.io/blog/2025/cybernews</id><content type="html" xml:base="https://djbsec.github.io/blog/2025/cybernews/"><![CDATA[<h1 id="cybersecurity-stories-for-january-17-2025">Cybersecurity Stories for January 17, 2025</h1> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <audio src="/assets/audio/news/CyberSecurityStories-01-17-2025.mp3" controls=""/> </figure> </div> </div> <div class="caption"> Todays stories in audio form </div> <h2 id="1-chinese-hackers-breach-us-treasury-department">1. Chinese Hackers Breach U.S. Treasury Department</h2> <p>Chinese state-sponsored hackers leveraged a vulnerability in software provided by BeyondTrust, a third-party cybersecurity vendor, to gain access to the U.S. Treasury Department’s internal systems. Among the compromised systems were those used by Treasury Secretary Janet Yellen. Classified as a “major incident,” this breach highlights the ongoing threat posed by supply chain vulnerabilities and foreign cyber espionage. U.S. officials are investigating the incident, emphasizing the need for stricter vendor security protocols and rapid vulnerability patching.</p> <ul> <li><strong>Reference</strong>: Reuters <ul> <li><a href="https://www.reuters.com/technology/cybersecurity/chinese-hackers-accessed-yellens-computer-us-treasury-breach-bloomberg-news-2025-01-17/">Chinese Hackers Breach Treasury</a></li> </ul> </li> </ul> <hr/> <h2 id="2-walmart-spark-accounts-hacked-in-fraud-scheme">2. Walmart Spark Accounts Hacked in Fraud Scheme</h2> <p>A growing number of Walmart Spark accounts have been compromised by cybercriminals who are using stolen credentials to make unauthorized purchases. Victims reported discovering mysterious charges on their bank accounts, often amounting to hundreds of dollars. This attack underscores the risks of weak passwords and reused credentials, as attackers likely obtained these details from unrelated data breaches. Walmart is advising affected users to change their passwords and enable two-factor authentication to secure their accounts.</p> <ul> <li><strong>Reference</strong>: The Sun <ul> <li><a href="https://www.the-sun.com/money/13313154/walmart-shopper-mystery-charge-bank-account-spark-security-issue/">Walmart Shopper Targeted in Fraud Scheme</a></li> </ul> </li> </ul> <hr/> <h2 id="3-australias-new-cyber-laws-spark-debate">3. Australia’s New Cyber Laws Spark Debate</h2> <p>Australia’s new cybersecurity legislation requires businesses to report ransomware payments to federal authorities, aiming to improve transparency and reduce the incentive for cybercriminals to target Australian entities. However, companies are expressing concerns over the legal and reputational implications of mandatory reporting. The legislation also empowers the Cyber Incident Review Board to conduct “no-fault” investigations into major incidents, sharing anonymized findings to help improve national cybersecurity resilience. Experts caution that the laws could inadvertently lead to underreporting if businesses fear public exposure.</p> <ul> <li><strong>Reference</strong>: The Australian <ul> <li><a href="https://www.theaustralian.com.au/business/legal-affairs/more-work-for-lawyers-under-new-cyber-laws-as-businesses-seek-to-avoid-victim-shaming/news-story/15a33919d2c7a458636dece2095ebac2">Australia’s New Cyber Laws</a></li> </ul> </li> </ul> <hr/> <h2 id="4-president-bidens-final-cybersecurity-executive-order">4. President Biden’s Final Cybersecurity Executive Order</h2> <p>In one of his last acts as President, Joe Biden signed an executive order to enhance cybersecurity measures across federal agencies and their contractors. The order requires contractors to adhere to rigorous cybersecurity standards, including secure software development practices, and to conduct regular vulnerability assessments. It also addresses emerging threats from artificial intelligence and quantum computing by allocating additional resources for research and development. The directive is expected to shape federal cybersecurity policies for years to come, although its long-term impact depends on the priorities of the incoming administration.</p> <ul> <li><strong>Reference</strong>: AP News <ul> <li><a href="https://apnews.com/article/3fc53784ad9d1c05d7de85224a762a36">Biden’s Cybersecurity Executive Order</a></li> </ul> </li> </ul> <hr/> <h2 id="5-rising-threat-of-ai-driven-phishing-campaigns">5. Rising Threat of AI-Driven Phishing Campaigns</h2> <p>Security researchers are warning of a new wave of phishing attacks powered by AI-generated content. These emails are designed to mimic human communication with near-perfect grammar and tone, making them more convincing and harder to identify as malicious. Some campaigns even use AI to generate voice messages for vishing (voice phishing) attacks. Experts recommend adopting advanced email security solutions that leverage AI to detect anomalies, as well as continued employee training to recognize subtle phishing indicators.</p> <ul> <li><strong>Reference</strong>: Wired <ul> <li><a href="https://www.wired.com/story/ai-generated-phishing-emails-pose-security-risks/">AI-Driven Phishing Campaigns</a></li> </ul> </li> </ul> <hr/> <h2 id="6-cybersecurity-lessons-from-ces-2025">6. Cybersecurity Lessons from CES 2025</h2> <p>The 2025 Consumer Electronics Show (CES) spotlighted advancements in IoT security as vendors showcased new solutions to secure smart home devices. These included systems for automatic firmware updates, stronger encryption protocols, and AI-driven threat detection. However, experts at the conference warned that older IoT devices, many of which lack basic security features, remain vulnerable and could compromise entire networks. This raises questions about the role of manufacturers in ensuring the long-term security of IoT products and whether regulatory measures are needed to enforce standards.</p> <ul> <li><strong>Reference</strong>: CES Official Blog <ul> <li><a href="https://ces.tech">CES 2025 Highlights on IoT Security</a></li> </ul> </li> </ul> <p>These stories offer a mix of technical, practical, and policy-focused topics that can spark insightful discussion.</p>]]></content><author><name></name></author><category term="News"/><category term="CyberNews"/><summary type="html"><![CDATA[Jan 17, 2025]]></summary></entry><entry><title type="html">a distill-style blog post</title><link href="https://djbsec.github.io/blog/2021/distill/" rel="alternate" type="text/html" title="a distill-style blog post"/><published>2021-05-22T00:00:00+00:00</published><updated>2021-05-22T00:00:00+00:00</updated><id>https://djbsec.github.io/blog/2021/distill</id><content type="html" xml:base="https://djbsec.github.io/blog/2021/distill/"><![CDATA[<h2 id="equations">Equations</h2> <p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine. You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p> <p>In fact, you can also use a single dollar sign <code class="language-plaintext highlighter-rouge">$</code> to create inline formulas, such as <code class="language-plaintext highlighter-rouge">$ E = mc^2 $</code>, which will render as $ E = mc^2 $. This approach provides the same effect during TeX-based compilation, but visually it appears slightly less bold compared to double-dollar signs <code class="language-plaintext highlighter-rouge">$$</code>, making it blend more naturally with surrounding text.</p> <p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph. Here is an example:</p> \[\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)\] <p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p> <hr/> <h2 id="citations">Citations</h2> <p>Citations are then used in the article body with the <code class="language-plaintext highlighter-rouge">&lt;d-cite&gt;</code> tag. The key attribute is a reference to the id provided in the bibliography. The key attribute can take multiple ids, separated by commas.</p> <p>The citation is presented inline like this: <d-cite key="gregor2015draw"></d-cite> (a number that displays more information on hover). If you have an appendix, a bibliography is automatically created and populated in it.</p> <p>Distill chose a numerical inline citation style to improve readability of citation dense articles and because many of the benefits of longer citations are obviated by displaying more information on hover. However, we consider it good style to mention author last names if you discuss something at length and it fits into the flow well — the authors are human and it’s nice for them to have the community associate them with their work.</p> <hr/> <h2 id="footnotes">Footnotes</h2> <p>Just wrap the text you would like to show up in a footnote in a <code class="language-plaintext highlighter-rouge">&lt;d-footnote&gt;</code> tag. The number of the footnote will be automatically generated.<d-footnote>This will become a hoverable footnote.</d-footnote></p> <hr/> <h2 id="code-blocks">Code Blocks</h2> <p>Syntax highlighting is provided within <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> tags. An example of inline code snippets: <code class="language-plaintext highlighter-rouge">&lt;d-code language="html"&gt;let x = 10;&lt;/d-code&gt;</code>. For larger blocks of code, add a <code class="language-plaintext highlighter-rouge">block</code> attribute:</p> <d-code block="" language="javascript"> var x = 25; function(x) { return x * x; } </d-code> <p><strong>Note:</strong> <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> blocks do not look good in the dark mode. You can instead use the standard Jekyll syntax highlight with the <code class="language-plaintext highlighter-rouge">highlight</code> liquid tag.</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
<span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
<span class="k">return</span> <span class="nx">x</span> <span class="err">\</span><span class="o">*</span> <span class="nx">x</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure> <p>You can also write standard Markdown code blocks in triple ticks with a language tag, for instance:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">foo</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
  <span class="k">return</span> <span class="n">x</span>
</code></pre></div></div> <hr/> <h2 id="interactive-plots">Interactive Plots</h2> <p>You can add interative plots using plotly + iframes :framed_picture:</p> <div class="l-page"> <iframe src="/assets/plotly/demo.html" frameborder="0" scrolling="no" height="500px" width="100%" style="border: 1px dashed grey;"></iframe> </div> <p>The plot must be generated separately and saved into an HTML file. To generate the plot that you see above, you can use the following code snippet:</p> <figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="n">plotly.express</span> <span class="k">as</span> <span class="n">px</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span>
<span class="sh">'</span><span class="s">https://raw.githubusercontent.com/plotly/datasets/master/earthquakes-23k.csv</span><span class="sh">'</span>
<span class="p">)</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="nf">density_mapbox</span><span class="p">(</span>
<span class="n">df</span><span class="p">,</span>
<span class="n">lat</span><span class="o">=</span><span class="sh">'</span><span class="s">Latitude</span><span class="sh">'</span><span class="p">,</span>
<span class="n">lon</span><span class="o">=</span><span class="sh">'</span><span class="s">Longitude</span><span class="sh">'</span><span class="p">,</span>
<span class="n">z</span><span class="o">=</span><span class="sh">'</span><span class="s">Magnitude</span><span class="sh">'</span><span class="p">,</span>
<span class="n">radius</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
<span class="n">center</span><span class="o">=</span><span class="nf">dict</span><span class="p">(</span><span class="n">lat</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">lon</span><span class="o">=</span><span class="mi">180</span><span class="p">),</span>
<span class="n">zoom</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
<span class="n">mapbox_style</span><span class="o">=</span><span class="sh">"</span><span class="s">stamen-terrain</span><span class="sh">"</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
<span class="n">fig</span><span class="p">.</span><span class="nf">write_html</span><span class="p">(</span><span class="sh">'</span><span class="s">assets/plotly/demo.html</span><span class="sh">'</span><span class="p">)</span></code></pre></figure> <hr/> <h2 id="details-boxes">Details boxes</h2> <p>Details boxes are collapsible boxes which hide additional information from the user. They can be added with the <code class="language-plaintext highlighter-rouge">details</code> liquid tag:</p> <details><summary>Click here to know more</summary> <p>Additional details, where math \(2x - 1\) and <code class="language-plaintext highlighter-rouge">code</code> is rendered correctly.</p> </details> <hr/> <h2 id="mermaid">Mermaid</h2> <p>This theme supports creating diagrams directly in markdown using <a href="https://mermaid.js.org/">Mermaid</a>. Mermaid enables users to render flowcharts, sequence diagrams, class diagrams, Gantt charts, and more. Simply embed the diagram syntax within a mermaid code block.</p> <p>To create a Gantt chart, you can use the following syntax:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">mermaid
</span><span class="sb">gantt
    dateFormat  YYYY-MM-DD
    title A Gantt Diagram

    section Section
    Task A           :a1, 2025-01-01, 30d
    Task B           :after a1, 20d
    Task C           :2025-01-10, 12d</span>
<span class="p">```</span>
</code></pre></div></div> <p>And here’s how it will be rendered:</p> <pre><code class="language-mermaid">gantt
    dateFormat  YYYY-MM-DD
    title A Gantt Diagram

    section Section
    Task A           :a1, 2025-01-01, 30d
    Task B           :after a1, 20d
    Task C           :2025-01-10, 12d
</code></pre> <p>Similarly, you can also use it to create beautiful class diagrams:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```mermaid
classDiagram
direction LR
    class Animal {
        +String species
        +int age
        +makeSound()
    }
    class Dog {
        +String breed
        +bark()
    }
    class Cat {
        +String color
        +meow()
    }
    class Bird {
        +String wingSpan
        +fly()
    }
    class Owner {
        +String name
        +int age
        +adoptAnimal(Animal animal)
    }

    Animal &lt;|-- Dog
    Animal &lt;|-- Cat
    Animal &lt;|-- Bird
    Owner "1" --&gt; "0..*" Animal

    Dog : +fetch()
    Cat : +purr()
    Bird : +sing()
```
</code></pre></div></div> <p>It will be presented as:</p> <pre><code class="language-mermaid">classDiagram
direction LR
    class Animal {
        +String species
        +int age
        +makeSound()
    }
    class Dog {
        +String breed
        +bark()
    }
    class Cat {
        +String color
        +meow()
    }
    class Bird {
        +String wingSpan
        +fly()
    }
    class Owner {
        +String name
        +int age
        +adoptAnimal(Animal animal)
    }

    Animal &lt;|-- Dog
    Animal &lt;|-- Cat
    Animal &lt;|-- Bird
    Owner "1" --&gt; "0..*" Animal

    Dog : +fetch()
    Cat : +purr()
    Bird : +sing()
</code></pre> <p>With Mermaid, you can easily add clear and dynamic diagrams to enhance your blog content.</p> <hr/> <h2 id="diff2html">Diff2Html</h2> <p>This theme also supports integrating <a href="https://github.com/rtfpessoa/diff2html">Diff2Html</a>, a tool that beautifully renders code differences (diffs) directly in markdown. Diff2Html is ideal for showcasing code changes, allowing you to clearly present additions, deletions, and modifications. It’s perfect for code reviews, documentation, and tutorials where step-by-step code changes need to be highlighted—you can even introduce changes across multiple files at once.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff2html
</span><span class="sb">diff --git a/utils/mathUtils.js b/utils/mathUtils.js
index 3b5f3d1..c7f9b2e 100644
--- a/utils/mathUtils.js
+++ b/utils/mathUtils.js
@@ -1,8 +1,12 @@
-// Basic math utilities
+// Extended math utilities with additional functions

-export function calculateArea(radius) {
-    const PI = 3.14159;
+export function calculateCircleMetrics(radius) {
+    const PI = Math.PI;
     const area = PI * radius ** 2;
+    const circumference = 2 * PI * radius;
+
+    if (!isValidRadius(radius)) throw new Error("Invalid radius");
+
     return { area, circumference };
 }

-export function validateRadius(radius) {
+export function isValidRadius(radius) {
     return typeof radius === 'number' &amp;&amp; radius &gt; 0;
 }

diff --git a/main.js b/main.js
index 5f6a9c3..b7d4e8f 100644
--- a/main.js
+++ b/main.js
@@ -2,9 +2,12 @@
 import { calculateCircleMetrics } from './utils/mathUtils';

-function displayCircleMetrics(radius) {
-    const { area } = calculateCircleMetrics(radius);
+function displayCircleMetrics(radius) {
+    const { area, circumference } = calculateCircleMetrics(radius);
     console.log(`Area: ${area}`);
+    console.log(`Circumference: ${circumference}`);
 }

-displayCircleMetrics(5);
+try {
+    displayCircleMetrics(5);
+} catch (error) {
+    console.error("Error:", error.message);
+}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Here’s how it will look when rendered with Diff2Html:</p> <pre><code class="language-diff2html">diff --git a/utils/mathUtils.js b/utils/mathUtils.js
index 3b5f3d1..c7f9b2e 100644
--- a/utils/mathUtils.js
+++ b/utils/mathUtils.js
@@ -1,8 +1,12 @@
-// Basic math utilities
+// Extended math utilities with additional functions

-export function calculateArea(radius) {
-    const PI = 3.14159;
+export function calculateCircleMetrics(radius) {
+    const PI = Math.PI;
     const area = PI * radius ** 2;
+    const circumference = 2 * PI * radius;
+
+    if (!isValidRadius(radius)) throw new Error("Invalid radius");
+
     return { area, circumference };
 }

-export function validateRadius(radius) {
+export function isValidRadius(radius) {
     return typeof radius === 'number' &amp;&amp; radius &gt; 0;
 }

diff --git a/main.js b/main.js
index 5f6a9c3..b7d4e8f 100644
--- a/main.js
+++ b/main.js
@@ -2,9 +2,12 @@
 import { calculateCircleMetrics } from './utils/mathUtils';

-function displayCircleMetrics(radius) {
-    const { area } = calculateCircleMetrics(radius);
+function displayCircleMetrics(radius) {
+    const { area, circumference } = calculateCircleMetrics(radius);
     console.log(`Area: ${area}`);
+    console.log(`Circumference: ${circumference}`);
 }

-displayCircleMetrics(5);
+try {
+    displayCircleMetrics(5);
+} catch (error) {
+    console.error("Error:", error.message);
+}
</code></pre> <hr/> <h2 id="leaflet">Leaflet</h2> <p><a href="https://leafletjs.com/">Leaflet</a> is created by Ukrainian software engineer <a href="https://agafonkin.com/">Volodymyr Agafonkin</a>, allowing interactive maps to be embedded in webpages. With support for <a href="https://geojson.org/">GeoJSON data</a>, Leaflet allows you to highlight specific regions, making it easy to visualize geographical information in detail.</p> <p>You can use the following code to load map information on <a href="https://www.openstreetmap.org/">OpenStreetMap</a>:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">geojson
</span><span class="sb">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {
        "name": "Crimea",
        "popupContent": "Occupied Crimea"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              33.9,
              45.3
            ],
            [
              36.5,
              45.3
            ],
            [
              36.5,
              44.4
            ],
            [
              33.9,
              44.4
            ],
            [
              33.9,
              45.3
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Donetsk",
        "popupContent": "Occupied Donetsk"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              37.5,
              48.5
            ],
            [
              39.5,
              48.5
            ],
            [
              39.5,
              47.5
            ],
            [
              37.5,
              47.5
            ],
            [
              37.5,
              48.5
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Luhansk",
        "popupContent": "Occupied Luhansk"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              38.5,
              49.5
            ],
            [
              40.5,
              49.5
            ],
            [
              40.5,
              48.5
            ],
            [
              38.5,
              48.5
            ],
            [
              38.5,
              49.5
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Kherson",
        "popupContent": "Occupied Kherson"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              32.3,
              47.3
            ],
            [
              34.3,
              47.3
            ],
            [
              34.3,
              46.3
            ],
            [
              32.3,
              46.3
            ],
            [
              32.3,
              47.3
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Zaporizhzhia",
        "popupContent": "Occupied Zaporizhzhia"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              34.3,
              48
            ],
            [
              36.3,
              48
            ],
            [
              36.3,
              47
            ],
            [
              34.3,
              47
            ],
            [
              34.3,
              48
            ]
          ]
        ]
      }
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>The rendered map below highlights the regions of Ukraine that have been illegally occupied by Russia over the years, including Crimea and the four eastern regions:</p> <pre><code class="language-geojson">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {
        "name": "Crimea",
        "popupContent": "Occupied Crimea"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              33.9,
              45.3
            ],
            [
              36.5,
              45.3
            ],
            [
              36.5,
              44.4
            ],
            [
              33.9,
              44.4
            ],
            [
              33.9,
              45.3
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Donetsk",
        "popupContent": "Occupied Donetsk"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              37.5,
              48.5
            ],
            [
              39.5,
              48.5
            ],
            [
              39.5,
              47.5
            ],
            [
              37.5,
              47.5
            ],
            [
              37.5,
              48.5
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Luhansk",
        "popupContent": "Occupied Luhansk"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              38.5,
              49.5
            ],
            [
              40.5,
              49.5
            ],
            [
              40.5,
              48.5
            ],
            [
              38.5,
              48.5
            ],
            [
              38.5,
              49.5
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Kherson",
        "popupContent": "Occupied Kherson"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              32.3,
              47.3
            ],
            [
              34.3,
              47.3
            ],
            [
              34.3,
              46.3
            ],
            [
              32.3,
              46.3
            ],
            [
              32.3,
              47.3
            ]
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Zaporizhzhia",
        "popupContent": "Occupied Zaporizhzhia"
      },
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            [
              34.3,
              48
            ],
            [
              36.3,
              48
            ],
            [
              36.3,
              47
            ],
            [
              34.3,
              47
            ],
            [
              34.3,
              48
            ]
          ]
        ]
      }
    }
  ]
}
</code></pre> <hr/> <h2 id="chartjs-echarts-and-vega-lite">Chartjs, Echarts and Vega-Lite</h2> <p><a href="https://www.chartjs.org/">Chart.js</a> is a versatile JavaScript library for creating responsive and interactive charts. Supporting multiple chart types like bar, line, pie, and radar, it’s an ideal tool for visualizing data directly in webpages.</p> <p>Here’s an example of a JSON-style configuration that creates a bar chart in Chart.js:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```chartjs
{
  "type": "bar",
  "data": {
    "labels": ["2017", "2018", "2019", "2020", "2021"],
    "datasets": [
      {
        "label": "Population (millions)",
        "data": [12, 15, 13, 14, 16],
        "backgroundColor": "rgba(54, 162, 235, 0.6)",
        "borderColor": "rgba(54, 162, 235, 1)",
        "borderWidth": 1
      }
    ]
  },
  "options": {
    "scales": {
      "y": {
        "beginAtZero": true
      }
    }
  }
}
```
</code></pre></div></div> <p>The rendered bar chart illustrates population data from 2017 to 2021:</p> <pre><code class="language-chartjs">{
  "type": "bar",
  "data": {
    "labels": ["2017", "2018", "2019", "2020", "2021"],
    "datasets": [
      {
        "label": "Population (millions)",
        "data": [12, 15, 13, 14, 16],
        "backgroundColor": "rgba(54, 162, 235, 0.6)",
        "borderColor": "rgba(54, 162, 235, 1)",
        "borderWidth": 1
      }
    ]
  },
  "options": {
    "scales": {
      "y": {
        "beginAtZero": true
      }
    }
  }
}
</code></pre> <hr/> <p><a href="https://echarts.apache.org/">ECharts</a> is a powerful visualization library from <a href="https://www.apache.org/">Apache</a> that supports a wide range of interactive charts, including more advanced types such as scatter plots, heatmaps, and geographic maps.</p> <p>The following JSON configuration creates a visually enhanced line chart that displays monthly sales data for two products.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```echarts
{
  "title": {
    "text": "Monthly Sales Comparison",
    "left": "center"
  },
  "tooltip": {
    "trigger": "axis",
    "backgroundColor": "rgba(50, 50, 50, 0.7)",
    "borderColor": "#777",
    "borderWidth": 1,
    "textStyle": {
      "color": "#fff"
    }
  },
  "legend": {
    "data": ["Product A", "Product B"],
    "top": "10%"
  },
  "xAxis": {
    "type": "category",
    "data": ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    "axisLine": {
      "lineStyle": {
        "color": "#888"
      }
    }
  },
  "yAxis": {
    "type": "value",
    "axisLine": {
      "lineStyle": {
        "color": "#888"
      }
    },
    "splitLine": {
      "lineStyle": {
        "type": "dashed"
      }
    }
  },
  "series": [
    {
      "name": "Product A",
      "type": "line",
      "smooth": true,
      "data": [820, 932, 901, 934, 1290, 1330, 1320, 1400, 1450, 1500, 1600, 1650],
      "itemStyle": {
        "color": "#5470C6"
      },
      "lineStyle": {
        "width": 3
      },
      "areaStyle": {
        "color": {
          "type": "linear",
          "x": 0,
          "y": 0,
          "x2": 0,
          "y2": 1,
          "colorStops": [
            { "offset": 0, "color": "rgba(84, 112, 198, 0.5)" },
            { "offset": 1, "color": "rgba(84, 112, 198, 0)" }
          ]
        }
      },
      "emphasis": {
        "focus": "series"
      }
    },
    {
      "name": "Product B",
      "type": "line",
      "smooth": true,
      "data": [620, 732, 701, 734, 1090, 1130, 1120, 1200, 1250, 1300, 1400, 1450],
      "itemStyle": {
        "color": "#91CC75"
      },
      "lineStyle": {
        "width": 3
      },
      "areaStyle": {
        "color": {
          "type": "linear",
          "x": 0,
          "y": 0,
          "x2": 0,
          "y2": 1,
          "colorStops": [
            { "offset": 0, "color": "rgba(145, 204, 117, 0.5)" },
            { "offset": 1, "color": "rgba(145, 204, 117, 0)" }
          ]
        }
      },
      "emphasis": {
        "focus": "series"
      }
    }
  ]
}
```
</code></pre></div></div> <p>The rendered output is shown below, and you can also interact with it using your mouse:</p> <pre><code class="language-echarts">{
  "title": {
    "text": "Monthly Sales Comparison",
    "left": "center"
  },
  "tooltip": {
    "trigger": "axis",
    "backgroundColor": "rgba(50, 50, 50, 0.7)",
    "borderColor": "#777",
    "borderWidth": 1,
    "textStyle": {
      "color": "#fff"
    }
  },
  "legend": {
    "data": ["Product A", "Product B"],
    "top": "10%"
  },
  "xAxis": {
    "type": "category",
    "data": ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    "axisLine": {
      "lineStyle": {
        "color": "#888"
      }
    }
  },
  "yAxis": {
    "type": "value",
    "axisLine": {
      "lineStyle": {
        "color": "#888"
      }
    },
    "splitLine": {
      "lineStyle": {
        "type": "dashed"
      }
    }
  },
  "series": [
    {
      "name": "Product A",
      "type": "line",
      "smooth": true,
      "data": [820, 932, 901, 934, 1290, 1330, 1320, 1400, 1450, 1500, 1600, 1650],
      "itemStyle": {
        "color": "#5470C6"
      },
      "lineStyle": {
        "width": 3
      },
      "areaStyle": {
        "color": {
          "type": "linear",
          "x": 0,
          "y": 0,
          "x2": 0,
          "y2": 1,
          "colorStops": [
            { "offset": 0, "color": "rgba(84, 112, 198, 0.5)" },
            { "offset": 1, "color": "rgba(84, 112, 198, 0)" }
          ]
        }
      },
      "emphasis": {
        "focus": "series"
      }
    },
    {
      "name": "Product B",
      "type": "line",
      "smooth": true,
      "data": [620, 732, 701, 734, 1090, 1130, 1120, 1200, 1250, 1300, 1400, 1450],
      "itemStyle": {
        "color": "#91CC75"
      },
      "lineStyle": {
        "width": 3
      },
      "areaStyle": {
        "color": {
          "type": "linear",
          "x": 0,
          "y": 0,
          "x2": 0,
          "y2": 1,
          "colorStops": [
            { "offset": 0, "color": "rgba(145, 204, 117, 0.5)" },
            { "offset": 1, "color": "rgba(145, 204, 117, 0)" }
          ]
        }
      },
      "emphasis": {
        "focus": "series"
      }
    }
  ]
}
</code></pre> <hr/> <p><a href="https://vega.github.io/vega-lite/">Vega-Lite</a> is a declarative visualization grammar that allows users to create, share, and customize a wide range of interactive data visualizations. The following JSON configuration generates a straightforward bar chart:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```vega_lite
{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "width": 400,
  "height": 200,
  "padding": 5,

  "data": [
    {
      "name": "table",
      "values": [
        {"category": "A", "value": 28},
        {"category": "B", "value": 55},
        {"category": "C", "value": 43},
        {"category": "D", "value": 91},
        {"category": "E", "value": 81},
        {"category": "F", "value": 53},
        {"category": "G", "value": 19},
        {"category": "H", "value": 87}
      ]
    }
  ],

  "scales": [
    {
      "name": "xscale",
      "type": "band",
      "domain": {"data": "table", "field": "category"},
      "range": "width",
      "padding": 0.1
    },
    {
      "name": "yscale",
      "type": "linear",
      "domain": {"data": "table", "field": "value"},
      "nice": true,
      "range": "height"
    }
  ],

  "axes": [
    {"orient": "bottom", "scale": "xscale"},
    {"orient": "left", "scale": "yscale"}
  ],

  "marks": [
    {
      "type": "rect",
      "from": {"data": "table"},
      "encode": {
        "enter": {
          "x": {"scale": "xscale", "field": "category"},
          "width": {"scale": "xscale", "band": 0.8},
          "y": {"scale": "yscale", "field": "value"},
          "y2": {"scale": "yscale", "value": 0},
          "fill": {"value": "steelblue"}
        },
        "update": {
          "fillOpacity": {"value": 1}
        },
        "hover": {
          "fill": {"value": "orange"}
        }
      }
    }
  ]
}
```
</code></pre></div></div> <p>The rendered output shows a clean and simple bar chart with a hover effect：</p> <pre><code class="language-vega_lite">{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "width": 400,
  "height": 200,
  "padding": 5,

  "data": [
    {
      "name": "table",
      "values": [
        {"category": "A", "value": 28},
        {"category": "B", "value": 55},
        {"category": "C", "value": 43},
        {"category": "D", "value": 91},
        {"category": "E", "value": 81},
        {"category": "F", "value": 53},
        {"category": "G", "value": 19},
        {"category": "H", "value": 87}
      ]
    }
  ],

  "scales": [
    {
      "name": "xscale",
      "type": "band",
      "domain": {"data": "table", "field": "category"},
      "range": "width",
      "padding": 0.1
    },
    {
      "name": "yscale",
      "type": "linear",
      "domain": {"data": "table", "field": "value"},
      "nice": true,
      "range": "height"
    }
  ],

  "axes": [
    {"orient": "bottom", "scale": "xscale"},
    {"orient": "left", "scale": "yscale"}
  ],

  "marks": [
    {
      "type": "rect",
      "from": {"data": "table"},
      "encode": {
        "enter": {
          "x": {"scale": "xscale", "field": "category"},
          "width": {"scale": "xscale", "band": 0.8},
          "y": {"scale": "yscale", "field": "value"},
          "y2": {"scale": "yscale", "value": 0},
          "fill": {"value": "steelblue"}
        },
        "update": {
          "fillOpacity": {"value": 1}
        },
        "hover": {
          "fill": {"value": "orange"}
        }
      }
    }
  ]
}
</code></pre> <hr/> <h2 id="tikz">TikZ</h2> <p><a href="https://tikz.net/">TikZ</a> is a powerful LaTeX-based drawing tool powered by <a href="https://tikzjax.com/">TikZJax</a>. You can easily port TikZ drawings from papers, posters, and notes. For example, we can use the following code to illustrate Euler’s formula $ e^{i \theta} = \cos \theta + i \sin \theta $:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/tikz"</span><span class="nt">&gt;</span>
<span class="se">\b</span>egin{tikzpicture}
    <span class="se">\f</span>illdraw[fill=cyan!10, draw=blue, thick] (0,0) circle (2cm);<span class="sb">

    \draw[-&gt;, thick] (-2.5,0) -- (2.5,0) node[right] {Re};
    \draw[-&gt;, thick] (0,-2.5) -- (0,2.5) node[above] {Im};

    \draw[-&gt;, thick, color=purple] (0,0) -- (1.5,1.5);
    \node[color=purple] at (1.1, 1.7) {$e^{i\theta}$};

    \draw[thick] (0.7,0) arc (0:45:0.7);
    \node at (0.9, 0.3) {$\theta$};

    \draw[dashed, color=gray] (1.5,1.5) -- (1.5,0) node[below, black] {$\cos \theta$};
    \draw[dashed, color=gray] (1.5,1.5) -- (0,1.5) node[left, black] {$\sin \theta$};
    \node at (2.2, 0) [below] {1}; 
    \node at (0, 2.2) [left] {$i$}; 
    \node at (1.5,1.5) [above right, color=blue] {$(\cos \theta \, \sin \theta)$}; 
</span><span class="se">\e</span>nd{tikzpicture}
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div> <p>The rendered output is shown below, displayed as a vector graphic：</p> <script type="text/tikz">
\begin{tikzpicture}
    \filldraw[fill=cyan!10, draw=blue, thick] (0,0) circle (2cm);

    \draw[->, thick] (-2.5,0) -- (2.5,0) node[right] {Re};
    \draw[->, thick] (0,-2.5) -- (0,2.5) node[above] {Im};

    \draw[->, thick, color=purple] (0,0) -- (1.5,1.5);
    \node[color=purple] at (1.1, 1.7) {$e^{i\theta}$};

    \draw[thick] (0.7,0) arc (0:45:0.7);
    \node at (0.9, 0.3) {$\theta$};

    \draw[dashed, color=gray] (1.5,1.5) -- (1.5,0) node[below, black] {$\cos \theta$};
    \draw[dashed, color=gray] (1.5,1.5) -- (0,1.5) node[left, black] {$\sin \theta$};
    \node at (2.2, 0) [below] {1}; 
    \node at (0, 2.2) [left] {$i$}; 
    \node at (1.5,1.5) [above right, color=blue] {$(\cos \theta \, \sin \theta)$}; 
\end{tikzpicture}
</script> <hr/> <h2 id="typograms">Typograms</h2> <p><a href="https://google.github.io/typograms/">Typograms</a> are a way of combining text and graphics to convey information in a clear and visually engaging manner. Typograms are particularly effective for illustrating simple diagrams, charts, and concept visuals where text and graphics are closely integrated. The following example demonstrates a simple Typogram:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```typograms
             ___________________
            /                  /|
           /__________________/ |
          |                  |  |
          |     Distill      |  |
          |                  |  |
          |                  | /
          |__________________|/
```
</code></pre></div></div> <p>The rendered output is shown below：</p> <pre><code class="language-typograms">             ___________________
            /                  /|
           /__________________/ |
          |                  |  |
          |     Distill      |  |
          |                  |  |
          |                  | /
          |__________________|/
</code></pre> <hr/> <h2 id="layouts">Layouts</h2> <p>The main text column is referred to as the body. It is the assumed layout of any direct descendants of the <code class="language-plaintext highlighter-rouge">d-article</code> element.</p> <div class="fake-img l-body"> <p>.l-body</p> </div> <p>For images you want to display a little larger, try <code class="language-plaintext highlighter-rouge">.l-page</code>:</p> <div class="fake-img l-page"> <p>.l-page</p> </div> <p>All of these have an outset variant if you want to poke out from the body text a little bit. For instance:</p> <div class="fake-img l-body-outset"> <p>.l-body-outset</p> </div> <div class="fake-img l-page-outset"> <p>.l-page-outset</p> </div> <p>Occasionally you’ll want to use the full browser width. For this, use <code class="language-plaintext highlighter-rouge">.l-screen</code>. You can also inset the element a little from the edge of the browser by using the inset variant.</p> <div class="fake-img l-screen"> <p>.l-screen</p> </div> <div class="fake-img l-screen-inset"> <p>.l-screen-inset</p> </div> <p>The final layout is for marginalia, asides, and footnotes. It does not interrupt the normal flow of <code class="language-plaintext highlighter-rouge">.l-body</code> sized text except on mobile screen sizes.</p> <div class="fake-img l-gutter"> <p>.l-gutter</p> </div> <hr/> <h2 id="other-typography">Other Typography?</h2> <p>Emphasis, aka italics, with <em>asterisks</em> (<code class="language-plaintext highlighter-rouge">*asterisks*</code>) or <em>underscores</em> (<code class="language-plaintext highlighter-rouge">_underscores_</code>).</p> <p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p> <p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p> <p>Strikethrough uses two tildes. <del>Scratch this.</del></p> <ol> <li>First ordered list item</li> <li>Another item ⋅⋅* Unordered sub-list.</li> <li>Actual numbers don’t matter, just that it’s a number ⋅⋅1. Ordered sub-list</li> <li>And another item.</li> </ol> <p>⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).</p> <p>⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅ ⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅ ⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p> <ul> <li> <p>Unordered list can use asterisks</p> </li> <li> <p>Or minuses</p> </li> <li> <p>Or pluses</p> </li> </ul> <p><a href="https://www.google.com">I’m an inline-style link</a></p> <p><a href="https://www.google.com" title="Google's Homepage">I’m an inline-style link with title</a></p> <p><a href="https://www.mozilla.org">I’m a reference-style link</a></p> <p><a href="http://slashdot.org">You can use numbers for reference-style link definitions</a></p> <p>Or leave it empty and use the <a href="http://www.reddit.com">link text itself</a>.</p> <p>URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or <a href="http://www.example.com">http://www.example.com</a> and sometimes example.com (but not on Github, for example).</p> <p>Some text to show that the reference links can follow later.</p> <p>Here’s our logo (hover to see the title text):</p> <p>Inline-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1"/></p> <p>Reference-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 2"/></p> <p>Inline <code class="language-plaintext highlighter-rouge">code</code> has <code class="language-plaintext highlighter-rouge">back-ticks around</code> it.</p> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">JavaScript syntax highlighting</span><span class="dl">"</span><span class="p">;</span>
<span class="nf">alert</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">s</span> <span class="o">=</span> <span class="sh">"</span><span class="s">Python syntax highlighting</span><span class="sh">"</span>
<span class="k">print</span> <span class="n">s</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>No language indicated, so no syntax highlighting.
But let's throw in a &lt;b&gt;tag&lt;/b&gt;.
</code></pre></div></div> <p>Colons can be used to align columns.</p> <table> <thead> <tr> <th>Tables</th> <th style="text-align: center">Are</th> <th style="text-align: right">Cool</th> </tr> </thead> <tbody> <tr> <td>col 3 is</td> <td style="text-align: center">right-aligned</td> <td style="text-align: right">$1600</td> </tr> <tr> <td>col 2 is</td> <td style="text-align: center">centered</td> <td style="text-align: right">$12</td> </tr> <tr> <td>zebra stripes</td> <td style="text-align: center">are neat</td> <td style="text-align: right">$1</td> </tr> </tbody> </table> <p>There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown.</p> <table> <thead> <tr> <th>Markdown</th> <th>Less</th> <th>Pretty</th> </tr> </thead> <tbody> <tr> <td><em>Still</em></td> <td><code class="language-plaintext highlighter-rouge">renders</code></td> <td><strong>nicely</strong></td> </tr> <tr> <td>1</td> <td>2</td> <td>3</td> </tr> </tbody> </table> <blockquote> <p>Blockquotes are very handy in email to emulate reply text. This line is part of the same quote.</p> </blockquote> <p>Quote break.</p> <blockquote> <p>This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p> </blockquote> <p>Here’s a line for us to start with.</p> <p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p> <p>This line is also a separate paragraph, but… This line is only separated by a single newline, so it’s a separate line in the <em>same paragraph</em>.</p>]]></content><author><name>Albert Einstein</name></author><category term="distill"/><category term="formatting"/><summary type="html"><![CDATA[an example of a distill-style blog post and main elements]]></summary></entry></feed>